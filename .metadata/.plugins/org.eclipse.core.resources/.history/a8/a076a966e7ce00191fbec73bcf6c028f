
import java.util.*;

public class Champ {
	//Attributs par défauts
	private final static int NBMINES=3;
	private final static int DIMEASY=5;
	private final static int DIMMEDIUM=10;
	private final static int DIMHARD=20;
	private static Level lev;

	
	
	private final String NomParDefaut="GAME";
	 private String name;
	private static boolean[][] tabMines;//Tableau représentatif du champs		
	Random alea=new Random();
	private  int dim;
	private  int nbmines;
	
					
		
	public   void InitialisationChamp()
	{
		tabMines=new boolean [dim][dim];		
		for(int i=0;i<dim;i++)
		{
			for(int j=0;j<dim;j++)
				tabMines[i][j]=false;//true si la case contient une mines
			
		}
	}
	
	public void InitialisationChamp(Level lev)
	{
		
		tabMines=New boolean [x][y]
		
		
		
	}
	
	public Champ()//constructeur par défaut
	{
		
		this.dim=DIMEASY;
		this.nbmines=NBMINES;
		this.name=NomParDefaut;
		InitialisationChamp();
	}

	//Setters
	public Champ(int dim,int nbmines,String N)
	{
	this();//Appel du constructeur par défaut
	this.dim=dim;
	this.nbmines=nbmines;
	this.name = new String(N); 

	//this.Name=N;Est-t-il possible de l'implémenter comme ça?
	this.name=new String(N);		
	}
	
	public Champ(Level lev)
	{
		if (lev.getLevel()==lvl.EASY)
			initChamp(10,10);
		else if(lev.getLevel()==lvl.MEDIUM)
			initChamp(20,20);	
		else if
			initChamp(20,20);
		
		
	}
	
	public  void placeMines()//Va placer aléatoirement les mines sur le champs
	{
		for(int i=0;i<nbmines;i++)
		{
			int x=alea.nextInt(dim);
			int y=alea.nextInt(dim);
			tabMines[x][y]=true;//true si la case contient une mines
			
		}
	}
	
	public void affText()//Cette méthode va nous afficher notre champs de mines
	{
		System.out.println("Notre champs de mines est le suivant:");
		
		for(int j=0;j<dim;j++)
		{
			for(int i=0;i<dim;i++) {
				if(tabMines[i][j]==true)//Si présence d'une mine
					System.out.print("x  ");
				else//si pas de présence de mines 
					System.out.print("0  ");
								
			}
        System.out.println();
		}
		
		
	}
	
	
	public   String toString() {//Surcharge de toString 
		StringBuilder str = new StringBuilder();
        str.append("Le nom de notre mine est : ").append(this.name).append("\n");
        str.append("La taille de notre mines est: ").append(this.dim).append("\n");
        str.append("Il y a  : ").append(this.nbmines).append(" mines dans notre champ de mines\n ");
        return str.toString();
	} 	
	//Destructeur
	protected void finalize() throws Throwable
	{
		super.finalize();
	}
	
	
	

}
